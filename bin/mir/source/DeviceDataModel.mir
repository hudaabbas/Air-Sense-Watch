[ @file = "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc"; @line = 7; ]
import Toybox.BluetoothLowEnergy;
[ @file = "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc"; @line = 8; ]
import Toybox.Lang;
[ @file = "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc"; @line = 9; ]
import Toybox.WatchUi;
[ @file = "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc"; @line = 11; ]
class DeviceDataModel{
    [ @file = "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc"; @line = 11; ]
    <init> {
    }
    [ @file = "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc"; @line = 11; ]
    static
    <init> {
    }
    [ @file = "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc"; @line = 12; @position = 16; ]
    private
    var _scanResult as ScanResult;
    [ @file = "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc"; @line = 13; @position = 16; ]
    private
    var _device as Device or Null;
    [ @file = "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc"; @line = 14; @position = 16; ]
    private
    var _airSenseProfile as ProfileModel or Null;
    [ @file = "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc"; @line = 15; @position = 16; ]
    private
    var _dataModelFactory as DataModelFactory;
    [ @file = "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc"; @line = 16; @position = 8; ]
    var _view as MainView or Null;
    //! Constructor
    //! @param bleDelegate The BLE delegate for the model
    //! @param dataModelFactory The factory to create models
    //! @param scanResult The device scan result
    [ @file = "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc"; @line = 22; ]
    public
    function initialize(bleDelegate as BLEDelegate, dataModelFactory as DataModelFactory, scanResult as ScanResult) as Void {
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_23_4_start:
[ "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc" 24 8 ]
        %tmp.2 = lgetv %scanResult;
        putv self :_scanResult %tmp.2;
[ "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc" 25 8 ]
        %tmp.4 = lgetv %dataModelFactory;
        putv self :_dataModelFactory %tmp.4;
[ "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc" 28 8 ]
        %tmp.5 = lgetv %bleDelegate;
        %tmp.6 = getv function %tmp.5 :notifyConnection;
        %tmp.8 = lgetv %self;
        invoke %tmp.5 %tmp.6(%tmp.8);
[ "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc" 30 8 ]
        %tmp.9 = null;
        putv self :_device %tmp.9;
[ "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc" 31 8 ]
        %tmp.10 = null;
        putv self :_airSenseProfile %tmp.10;
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_23_4_stop:
    }
    //! Process a new device connection
    //! @param device The device that was connected
    [ @file = "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc"; @line = 36; ]
    public
    function procConnection(device as Device) as Void {
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_36_61_start:
[ "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc" 37 8 ]
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_37_8_if_stmt:
        %tmp.2 = lgetv %device;
        %tmp.4 = getv ? :_device;
        %tmp.5 = ne %tmp.2 %tmp.4;
        bf %tmp.5 @_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_37_8_if_end;
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_37_8_if_true:
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_37_31_start:
[ "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc" 39 12 ]
        ret ?;
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_37_31_stop:
        goto @_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_37_8_if_end;
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_37_8_if_end:
[ "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc" 42 8 ]
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_42_8_if_stmt:
        %tmp.6 = lgetv %device;
        %tmp.7 = getv function %tmp.6 :isConnected;
        %tmp.8 = invoke %tmp.6 %tmp.7();
        bf %tmp.8 @_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_42_8_if_end;
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_42_8_if_true:
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_42_34_start:
[ "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc" 43 12 ]
        %tmp.9 = self;
        %tmp.10 = getv function %tmp.9 :procDeviceConnected;
        invoke %tmp.9 %tmp.10();
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_42_34_stop:
        goto @_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_42_8_if_end;
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_42_8_if_end:
[ "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc" 46 8 ]
        %tmp.11 = getm $.Toybox.WatchUi;
        %tmp.12 = getv function %tmp.11 :requestUpdate;
        invoke %tmp.11 %tmp.12();
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_36_61_stop:
    }
    //! Pair the device associated with the current scan result
    [ @file = "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc"; @line = 50; ]
    public
    function pair() as Void {
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_51_4_start:
[ "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc" 52 8 ]
        %tmp.1 = getm $.Toybox.BluetoothLowEnergy;
        %tmp.2 = getv function %tmp.1 :setScanState;
        %tmp.3 = getm $.Toybox.BluetoothLowEnergy;
        %tmp.4 = getv %tmp.3 :SCAN_STATE_OFF;
        invoke %tmp.1 %tmp.2(%tmp.4);
[ "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc" 53 8 ]
        %tmp.5 = getm $.Toybox.BluetoothLowEnergy;
        %tmp.6 = getv function %tmp.5 :pairDevice;
        %tmp.8 = getv ? :_scanResult;
        %tmp.9 = invoke %tmp.5 %tmp.6(%tmp.8);
        putv self :_device %tmp.9;
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_51_4_stop:
    }
    //! Unpair the current device
    [ @file = "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc"; @line = 57; ]
    public
    function unpair() as Void {
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_58_4_start:
[ "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc" 59 8 ]
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_59_8_if_stmt:
        %tmp.2 = getv ? :_device;
        %tmp.3 = null;
        %tmp.4 = ne %tmp.2 %tmp.3;
        bf %tmp.4 @_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_59_8_if_end;
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_59_8_if_true:
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_60_8_start:
[ "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc" 61 12 ]
        %tmp.5 = getm $.Toybox.BluetoothLowEnergy;
        %tmp.6 = getv function %tmp.5 :unpairDevice;
        %tmp.8 = getv ? :_device;
        %tmp.9 = as %tmp.8 { (!Null) };
        invoke %tmp.5 %tmp.6(%tmp.9);
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_60_8_stop:
        goto @_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_59_8_if_end;
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_59_8_if_end:
[ "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc" 63 8 ]
        %tmp.10 = null;
        putv self :_device %tmp.10;
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_58_4_stop:
    }
    //! Get the active profile
    //! @return The current profile, or null if no device connected
    [ @file = "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc"; @line = 68; ]
    public
    function getActiveProfile() as ProfileModel or Null {
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_69_4_start:
[ "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc" 70 8 ]
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_70_8_if_stmt:
        %tmp.2 = getv ? :_device;
        %tmp.3 = null;
        %tmp.4 = ne %tmp.2 %tmp.3;
        bf %tmp.4 @_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_70_8_if_end;
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_70_8_if_true:
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_70_29_start:
[ "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc" 71 12 ]
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_71_12_if_stmt:
        %tmp.6 = getv ? :_device;
        %tmp.7 = as %tmp.6 { (!Null) };
        %tmp.8 = getv function %tmp.7 :isConnected;
        %tmp.9 = invoke %tmp.7 %tmp.8();
        %tmp.10 = not %tmp.9;
        bf %tmp.10 @_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_71_12_if_end;
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_71_12_if_true:
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_72_12_start:
[ "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc" 73 16 ]
        %tmp.11 = null;
        ret %tmp.11;
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_72_12_stop:
        goto @_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_71_12_if_end;
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_71_12_if_end:
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_70_29_stop:
        goto @_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_70_8_if_end;
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_70_8_if_end:
[ "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc" 77 8 ]
        %tmp.13 = getv ? :_airSenseProfile;
        ret %tmp.13;
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_69_4_stop:
    }
    //! Get whether a device is connected
    //! @return true if connected, false otherwise
    [ @file = "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc"; @line = 82; ]
    public
    function isConnected() as Boolean {
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_83_4_start:
[ "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc" 84 8 ]
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_84_8_if_stmt:
        %tmp.2 = getv ? :_device;
        %tmp.3 = null;
        %tmp.4 = ne %tmp.2 %tmp.3;
        bf %tmp.4 @_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_84_8_if_end;
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_84_8_if_true:
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_84_29_start:
[ "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc" 85 12 ]
        %tmp.6 = getv ? :_device;
        %tmp.7 = as %tmp.6 { (!Null) };
        %tmp.8 = getv function %tmp.7 :isConnected;
        %tmp.9 = invoke %tmp.7 %tmp.8();
        ret %tmp.9;
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_84_29_stop:
        goto @_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_84_8_if_end;
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_84_8_if_end:
[ "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc" 87 8 ]
        %tmp.10 = false;
        ret %tmp.10;
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_83_4_stop:
    }
    //! Update the profile after a is device connected
    [ @file = "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc"; @line = 91; ]
    private
    function procDeviceConnected() as Void {
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_92_4_start:
[ "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc" 93 8 ]
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_93_8_if_stmt:
        %tmp.2 = getv ? :_device;
        %tmp.3 = null;
        %tmp.4 = ne %tmp.2 %tmp.3;
        bf %tmp.4 @_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_93_8_if_end;
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_93_8_if_true:
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_93_29_start:
[ "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc" 94 12 ]
        %tmp.6 = getv ? :_dataModelFactory;
        %tmp.7 = getv function %tmp.6 :getEnvironmentModel;
        %tmp.9 = getv ? :_device;
        %tmp.10 = as %tmp.9 { (!Null) };
        %tmp.11 = invoke %tmp.6 %tmp.7(%tmp.10);
        putv self :_airSenseProfile %tmp.11;
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_93_29_stop:
        goto @_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_93_8_if_end;
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_93_8_if_end:
_Users_hudaabbas_Documents_GitHub_AirSenseBLE_source_DeviceDataModel_mc_92_4_stop:
    }
}
[ @file = "/Users/hudaabbas/Documents/GitHub/AirSenseBLE/source/DeviceDataModel.mc"; @line = 7; ]
<init> {
}
